---
import type { Category } from '../types/channel';
import ChannelCard from './ChannelCard.astro';
import Arrow from './SolarRoundAltArrowRightBold.astro';

interface Props {
  category: Category;
}

const { category } = Astro.props;
const hasChannels = category.subcategories.some(
  (sub) => sub.channels.length > 0
);
---

<section class="category-section">
  <div class="category-header">
    <h2>{category.name}</h2>
    <div class="category-subheader">
      <span class="channel-count">
        {
          category.subcategories.reduce(
            (acc, sub) => acc + sub.channels.length,
            0
          )
        } channels
      </span>
      <Arrow class="arrow" />
    </div>
  </div>

  {
    hasChannels && (
      <div class="subcategories-grid hide">
        {category.subcategories.map(
          (subcategory) =>
            subcategory.channels.length > 0 && (
              <div class="subcategory">
                {subcategory.name !== 'General' && <h3>{subcategory.name}</h3>}
                <ul class="channels-list">
                  {subcategory.channels.map((channel) => (
                    <ChannelCard channel={channel} />
                  ))}
                </ul>
              </div>
            )
        )}
      </div>
    )
  }
</section>

<style>
  .category-section {
    background: var(--surface-2);
    border-radius: 16px;
    padding: 4rem;
    transition: all 0.3s;
    position: relative;
    overflow: hidden;
  }

  .category-section::before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    height: 4px;
    background: linear-gradient(90deg, var(--primary) 0%, var(--accent) 100%);
  }

  .category-section:hover {
    transform: translateY(-4px);
    box-shadow: 0 10px 20px rgba(0, 0, 0, 0.1);
  }

  .category-header {
    display: flex;
    justify-content: space-between;
    align-items: center;
    padding: 0 1rem;
  }

  .category-header h2 {
    font-size: 1.8rem;
    color: var(--text-1);
    font-weight: 700;
    background: linear-gradient(90deg, var(--primary) 0%, var(--accent) 100%);
    -webkit-background-clip: text;
    -webkit-text-fill-color: transparent;
  }

  .channel-count {
    background: var(--surface-3);
    color: var(--text-2);
    padding: 0.5rem 1rem;
    border-radius: 20px;
    font-size: 0.9rem;
    font-weight: 500;
    border: 1px solid var(--surface-3);
    transition: all 0.2s;
  }

  .category-subheader {
    display: flex;
    align-items: center;
    gap: 1rem;
  }

  .category-section:hover .channel-count {
    background: var(--primary-light);
    color: white;
    border-color: var(--primary);
  }

  .subcategories-grid {
    display: grid;
    gap: 2rem;
    opacity: 1;
    height: 100%;
    transition: all 0.4s cubic-bezier(0.755, 0.05, 0.855, 0.06);
  }

  .hide {
    opacity: 0;
    height: 0;
  }

  .arrow {
    width: fit-content;
    font-size: 2.2rem;
    cursor: pointer;
    transition: all 0.2s ease;
    -webkit-tap-highlight-color: transparent;
  }

  .rotate {
    transform: rotate(90deg);
    transition: all 0.2s ease;
  }

  .subcategory h3 {
    font-size: 1.2rem;
    color: var(--text-2);
    margin-bottom: 1rem;
    font-weight: 600;
    position: relative;
    padding-left: 1rem;
  }

  .subcategory h3::before {
    content: '';
    position: absolute;
    left: 0;
    top: 50%;
    transform: translateY(-50%);
    width: 4px;
    height: 1.2rem;
    background: var(--primary);
    border-radius: 2px;
  }

  .channels-list {
    list-style: none;
    padding: 0;
    margin: 1.5rem 0.5rem;
    display: grid;
    grid-template-columns: repeat(auto-fill, minmax(250px, 1fr));
    gap: 4rem 1rem;
  }

  @media (max-width: 768px) {
    .category-section {
      padding: 0.5rem;
      padding-bottom: 2rem;
    }

    .category-header {
      flex-direction: column;
      align-items: flex-start;
      gap: 0.5rem;
      margin-bottom: 1rem;
    }

    .channels-list {
      gap: 3rem;
    }
  }
</style>

<script>
  const subcategoriesGrid = document.querySelectorAll('.subcategories-grid');
  const arrow = document.querySelectorAll('.arrow');

  subcategoriesGrid.forEach((subGrid, index) => {
    arrow[index]?.addEventListener('click', () => {
      arrow[index]?.classList.toggle('rotate');
      subGrid?.classList.toggle('hide');
    });
  });
</script>
